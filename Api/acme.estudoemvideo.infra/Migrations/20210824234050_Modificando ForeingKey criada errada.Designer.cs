// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using acme.estudoemvideo.infra.Config;

namespace acme.estudoemvideo.infra.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210824234050_Modificando ForeingKey criada errada")]
    partial class ModificandoForeingKeycriadaerrada
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Diary.Agenda", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("AnoLetivoId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Compromisso")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataCompromisso")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("Prova")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte[]>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("AnoLetivoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Diary.AnoLetivo", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("DiaLetivo")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<bool>("FeiradoEscolar")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<bool>("FeiradoEstadual")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<bool>("FeiradoMunicipal")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<bool>("FeiradoNacional")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("AnoLetivo");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Diary.MateriaAgenda", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("AgendaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("MateriaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("AgendaId");

                    b.HasIndex("MateriaId");

                    b.ToTable("MateriaAgenda");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Movie.CategoriaVideo", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("CategoriaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte[]>("VideoId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("VideoId");

                    b.ToTable("CategoriaVideo");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Movie.MovieList", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("CaminhoLista")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("~/Video/");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("NomeLista")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("MovieList");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Movie.MovieListUsuario", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Download")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<bool?>("Favorito")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<byte[]>("MovieListId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte[]>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("MovieListId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("MovieListUsuario");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Movie.Util.Categoria", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Movie.Video", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Caminho")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("~/Video/");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("EnumPopularidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("PopularidadeEmNumero")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<long?>("Visualizacao")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Video");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Movie.VideoMovieList", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataLigacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("MovieListId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte[]>("VideoId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("MovieListId");

                    b.HasIndex("VideoId");

                    b.ToTable("MovieListVideo");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Movie.VotoVideo", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<long>("LikeRelevancia")
                        .HasColumnType("bigint");

                    b.Property<string>("Observacao")
                        .HasMaxLength(2500)
                        .HasColumnType("varchar(2500)");

                    b.Property<long>("QuantidadeLike")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte[]>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("VideoId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("VideoId");

                    b.ToTable("VotoVideo");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.AlunoEscola", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("DataAlunoEscola")
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2021, 8, 24, 20, 40, 49, 826, DateTimeKind.Local).AddTicks(6992));

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataMatriculaAlunoNaEscola")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("EscolaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<long>("Matricula")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte[]>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AlunoEscola");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Escola", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(900)
                        .HasColumnType("varchar(900)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Escola");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Matter.Books.Apostila", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("ArquivoId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Bibliografia")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("ConteudoId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("ArquivoId");

                    b.HasIndex("ConteudoId");

                    b.ToTable("Apostila");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Matter.Books.Livro", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("ArquivoId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Bibliografia")
                        .HasColumnType("text");

                    b.Property<byte[]>("ConteudoId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("ArquivoId");

                    b.HasIndex("ConteudoId");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Matter.Conteudo", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Conteudo");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Matter.ConteudoMateria", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("ConteudoId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("DataAtribuicao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("MateriaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("ConteudoId");

                    b.HasIndex("MateriaId");

                    b.ToTable("ConteudoMateria");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Matter.Materia", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Materia");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Notes.Nota", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsAprovado")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRecuperacao")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsReprovado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Nota");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Notes.NotaAlunoMateriaConteudo", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("ConteudoId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("NotaAlunoMateriaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("ConteudoId");

                    b.HasIndex("NotaAlunoMateriaId");

                    b.ToTable("NotaAlunoMateriaConteudo");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Notes.NotaAlunoMateriaProfessor", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("AlunoEscolaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("MateriaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("NotaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("ProfessorEscolaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("AlunoEscolaId");

                    b.HasIndex("MateriaId");

                    b.HasIndex("NotaId");

                    b.HasIndex("ProfessorEscolaId");

                    b.ToTable("NotaAlunoMateriaProfessor");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.ProfessorEscola", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("EscolaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("PopularidadeProfessor")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte[]>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ProfessorEscola");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Question.Pergunta", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataPergunta")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Pergunta");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Question.PerguntaQuestionario", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataVinculo")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("PerguntaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("QuestionarioId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("RespostaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("PerguntaId");

                    b.HasIndex("QuestionarioId");

                    b.HasIndex("RespostaId");

                    b.ToTable("PerguntaQuestionario");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Question.Questionario", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TotalPerguntas")
                        .HasColumnType("int")
                        .HasDefaultValue(10);

                    b.Property<byte[]>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Questionario");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Question.Resposta", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataInseridaResposta")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<byte[]>("PerguntaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Relevancia")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte[]>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("PerguntaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Resposta");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Turma", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("EscolaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Nome")
                        .HasMaxLength(900)
                        .HasColumnType("varchar(900)");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.Property<byte[]>("SerieId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.HasIndex("SerieId");

                    b.ToTable("Turma");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Util.Bimestre", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Bimestre");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Util.EnderecoEscola", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("EnderecoId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("EscolaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("EscolaId");

                    b.ToTable("EnderecoEscola");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Util.FrequenciaAlunoMateria", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("AgendaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("AlunoEscolaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("JustificativaFalta")
                        .HasColumnType("text");

                    b.Property<byte[]>("MateriaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("QuantidadeFalta")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("QuantidadeFaltaJustificada")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("QuantidadePresenca")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("AgendaId");

                    b.HasIndex("AlunoEscolaId");

                    b.HasIndex("MateriaId");

                    b.ToTable("FrequenciaAlunoMateria");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Util.Serie", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Serie");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Util.TurmaAlunoEscola", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("AlunoEscolaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte[]>("TurmaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoEscolaId");

                    b.HasIndex("TurmaId");

                    b.ToTable("TurmaAlunoEscola");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Util.TurmaBimestre", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("BimestreId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte[]>("TurmaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("BimestreId");

                    b.HasIndex("TurmaId");

                    b.ToTable("TurmaBimestre");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Util.TurmaMateriaProfessorEscola", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("MateriaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("ProfessorEscolaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte[]>("TurmaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("MateriaId");

                    b.HasIndex("ProfessorEscolaId");

                    b.HasIndex("TurmaId");

                    b.ToTable("TurmaMateriaProfessorEscola");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Seguranca.AutorizacaoApi", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("AccessKey")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("CnpjEmpresa")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("AutorizacaoApi");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Seguranca.Site.Permissao", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Permissao");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Seguranca.Site.PermissaoConta", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<bool?>("Add")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("ContaId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("DataAtribuicao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Delete")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("PermissaoId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<bool>("PermissaoValida")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Read")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool?>("Update")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.HasIndex("PermissaoId");

                    b.ToTable("PermissaoConta");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Seguranca.Site.PermissaoMenu", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<bool?>("Add")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Delete")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("MenuId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("PermissaoId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<bool?>("Read")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool?>("Update")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("PermissaoId");

                    b.ToTable("PermissaoMenu");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.User.Conta", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<bool?>("AlterarSenha")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<bool?>("ContaAtiva")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("Logado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("TermoDeAceite")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Conta");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.User.EnderecoUsuario", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("EnderecoId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte[]>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EnderecoUsuario");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.User.Usuario", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<bool>("DadosModificado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Util.Arquivo", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("HashArquivo")
                        .HasMaxLength(900)
                        .HasColumnType("varchar(900)");

                    b.Property<string>("NomeArquivo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NomeArquivoSalvo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Url")
                        .HasMaxLength(900)
                        .HasColumnType("varchar(900)");

                    b.HasKey("Id");

                    b.ToTable("Arquivo");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Util.Endereco", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Estado")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Pais")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Cep")
                        .IsUnique();

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Util.Log<object>", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataLog")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(900)
                        .HasColumnType("varchar(900)");

                    b.Property<string>("ModificaoObjeto")
                        .HasMaxLength(900)
                        .HasColumnType("varchar(900)");

                    b.Property<string>("Nome")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ObjetoJson")
                        .IsRequired()
                        .HasMaxLength(900)
                        .HasColumnType("varchar(900)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte[]>("UsuarioId")
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Util.Menu", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Caminho")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Icone")
                        .HasColumnType("text");

                    b.Property<byte[]>("MenuIdPai")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("Posicao")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Util.Parametro", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(900)
                        .HasColumnType("varchar(900)");

                    b.Property<bool?>("Editar")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Parametro");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Diary.Agenda", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.Diary.AnoLetivo", "AnoLetivo")
                        .WithMany("Agendas")
                        .HasForeignKey("AnoLetivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.User.Usuario", "Usuario")
                        .WithMany("Agendas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnoLetivo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Diary.MateriaAgenda", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.Diary.Agenda", "Agenda")
                        .WithMany("MateriasAgendas")
                        .HasForeignKey("AgendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Matter.Materia", "Materia")
                        .WithMany("MateriasAgendas")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agenda");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Movie.CategoriaVideo", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.Movie.Util.Categoria", "Categoria")
                        .WithMany("CategoriasVideos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.Movie.Video", "Video")
                        .WithMany("CategoriasVideos")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Movie.MovieListUsuario", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.Movie.MovieList", "MovieList")
                        .WithMany("MovieListUsuarios")
                        .HasForeignKey("MovieListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.User.Usuario", "Usuario")
                        .WithMany("MovieListUsuarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieList");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Movie.VideoMovieList", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.Movie.MovieList", "MovieList")
                        .WithMany("VideosMovieList")
                        .HasForeignKey("MovieListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.Movie.Video", "Video")
                        .WithMany("MovieListVideos")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieList");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Movie.VotoVideo", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.User.Usuario", "Usuarios")
                        .WithMany("VotoVideos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.Movie.Video", "Video")
                        .WithMany("VotoVideos")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuarios");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.AlunoEscola", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Escola", "Escola")
                        .WithMany("AlunosEscolas")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.User.Usuario", "Aluno")
                        .WithMany("AlunosEscolas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Matter.Books.Apostila", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.Util.Arquivo", "Arquivo")
                        .WithMany("Apostilas")
                        .HasForeignKey("ArquivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Matter.Conteudo", "Conteudo")
                        .WithMany("Apostilas")
                        .HasForeignKey("ConteudoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arquivo");

                    b.Navigation("Conteudo");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Matter.Books.Livro", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.Util.Arquivo", "Arquivo")
                        .WithMany("Livros")
                        .HasForeignKey("ArquivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Matter.Conteudo", "Conteudo")
                        .WithMany("Livros")
                        .HasForeignKey("ConteudoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arquivo");

                    b.Navigation("Conteudo");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Matter.ConteudoMateria", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Matter.Conteudo", "Conteudo")
                        .WithMany("ConteudosMaterias")
                        .HasForeignKey("ConteudoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Matter.Materia", "Materia")
                        .WithMany("ConteudosMaterias")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conteudo");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Notes.NotaAlunoMateriaConteudo", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Matter.Conteudo", "Conteudo")
                        .WithMany("NotaAlunoMateriaConteudos")
                        .HasForeignKey("ConteudoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Notes.NotaAlunoMateriaProfessor", "NotaAlunoMateria")
                        .WithMany("NotaAlunoMateriaConteudos")
                        .HasForeignKey("NotaAlunoMateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conteudo");

                    b.Navigation("NotaAlunoMateria");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Notes.NotaAlunoMateriaProfessor", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.School.AlunoEscola", "AlunoEscola")
                        .WithMany("NotasAlunosMateriasProfessores")
                        .HasForeignKey("AlunoEscolaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Matter.Materia", "Materia")
                        .WithMany("NotasAlunosMateriasProfessores")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Notes.Nota", "Nota")
                        .WithMany("NotasAlunosMateriasProfessores")
                        .HasForeignKey("NotaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.ProfessorEscola", "ProfessorEscola")
                        .WithMany("NotasAlunosMateriasProfessores")
                        .HasForeignKey("ProfessorEscolaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AlunoEscola");

                    b.Navigation("Materia");

                    b.Navigation("Nota");

                    b.Navigation("ProfessorEscola");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.ProfessorEscola", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Escola", "Escola")
                        .WithMany("ProfessorEscolas")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.User.Usuario", "Usuario")
                        .WithMany("ProfessorEscolas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Question.PerguntaQuestionario", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Question.Pergunta", "Pergunta")
                        .WithMany("PerguntasQuestionarios")
                        .HasForeignKey("PerguntaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Question.Questionario", "Questionario")
                        .WithMany("PerguntasQuestionarios")
                        .HasForeignKey("QuestionarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Question.Resposta", "Resposta")
                        .WithMany("PerguntasQuestionarios")
                        .HasForeignKey("RespostaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pergunta");

                    b.Navigation("Questionario");

                    b.Navigation("Resposta");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Question.Questionario", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.User.Usuario", "Usuario")
                        .WithMany("Questionarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Question.Resposta", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Question.Pergunta", "Pergunta")
                        .WithMany("Respostas")
                        .HasForeignKey("PerguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.User.Usuario", "Usuario")
                        .WithMany("Respostas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pergunta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Turma", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Escola", "Escola")
                        .WithMany("Turmas")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Util.Serie", "Serie")
                        .WithMany("Turmas")
                        .HasForeignKey("SerieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");

                    b.Navigation("Serie");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Util.EnderecoEscola", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.Util.Endereco", "Endereco")
                        .WithMany("EnderecoEscolas")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Escola", "Escola")
                        .WithMany("EnderecoEscolas")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Util.FrequenciaAlunoMateria", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.Diary.Agenda", "Agenda")
                        .WithMany("FrequenciasAlunosMaterias")
                        .HasForeignKey("AgendaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.AlunoEscola", "AlunoEscola")
                        .WithMany("FrequenciasAlunosMaterias")
                        .HasForeignKey("AlunoEscolaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Matter.Materia", "Materia")
                        .WithMany("FrequenciasAlunosMaterias")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Agenda");

                    b.Navigation("AlunoEscola");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Util.TurmaAlunoEscola", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.School.AlunoEscola", "AlunoEscola")
                        .WithMany("TurmasAlunosEscolas")
                        .HasForeignKey("AlunoEscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Turma", "Turma")
                        .WithMany("TurmasAlunosEscolas")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlunoEscola");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Util.TurmaBimestre", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Util.Bimestre", "Bimestre")
                        .WithMany("TurmaBimestres")
                        .HasForeignKey("BimestreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Turma", "Turma")
                        .WithMany("TurmaBimestres")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bimestre");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Util.TurmaMateriaProfessorEscola", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Matter.Materia", "Materia")
                        .WithMany("TurmaMateriaProfessorEscolas")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.ProfessorEscola", "ProfessorEscola")
                        .WithMany("TurmaMateriaProfessorEscolas")
                        .HasForeignKey("ProfessorEscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.School.Turma", "Turma")
                        .WithMany("TurmaMateriaProfessorEscolas")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materia");

                    b.Navigation("ProfessorEscola");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Seguranca.Site.PermissaoConta", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.User.Conta", "Conta")
                        .WithMany("PermissoesContas")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.Seguranca.Site.Permissao", "Permissao")
                        .WithMany("PermissoesContas")
                        .HasForeignKey("PermissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");

                    b.Navigation("Permissao");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Seguranca.Site.PermissaoMenu", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.Util.Menu", "Menu")
                        .WithMany("PermissoesMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.Seguranca.Site.Permissao", "Permissao")
                        .WithMany()
                        .HasForeignKey("PermissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Permissao");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.User.Conta", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.User.Usuario", "Usuario")
                        .WithMany("Contas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.User.EnderecoUsuario", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.Util.Endereco", "Endereco")
                        .WithMany("EnderecoUsuarios")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.estudoemvideo.domain.DTO.User.Usuario", "Usuario")
                        .WithMany("EnderecoUsuarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Util.Log<object>", b =>
                {
                    b.HasOne("acme.estudoemvideo.domain.DTO.User.Usuario", "Usuario")
                        .WithMany("Logs")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Diary.Agenda", b =>
                {
                    b.Navigation("FrequenciasAlunosMaterias");

                    b.Navigation("MateriasAgendas");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Diary.AnoLetivo", b =>
                {
                    b.Navigation("Agendas");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Movie.MovieList", b =>
                {
                    b.Navigation("MovieListUsuarios");

                    b.Navigation("VideosMovieList");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Movie.Util.Categoria", b =>
                {
                    b.Navigation("CategoriasVideos");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Movie.Video", b =>
                {
                    b.Navigation("CategoriasVideos");

                    b.Navigation("MovieListVideos");

                    b.Navigation("VotoVideos");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.AlunoEscola", b =>
                {
                    b.Navigation("FrequenciasAlunosMaterias");

                    b.Navigation("NotasAlunosMateriasProfessores");

                    b.Navigation("TurmasAlunosEscolas");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Escola", b =>
                {
                    b.Navigation("AlunosEscolas");

                    b.Navigation("EnderecoEscolas");

                    b.Navigation("ProfessorEscolas");

                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Matter.Conteudo", b =>
                {
                    b.Navigation("Apostilas");

                    b.Navigation("ConteudosMaterias");

                    b.Navigation("Livros");

                    b.Navigation("NotaAlunoMateriaConteudos");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Matter.Materia", b =>
                {
                    b.Navigation("ConteudosMaterias");

                    b.Navigation("FrequenciasAlunosMaterias");

                    b.Navigation("MateriasAgendas");

                    b.Navigation("NotasAlunosMateriasProfessores");

                    b.Navigation("TurmaMateriaProfessorEscolas");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Notes.Nota", b =>
                {
                    b.Navigation("NotasAlunosMateriasProfessores");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Notes.NotaAlunoMateriaProfessor", b =>
                {
                    b.Navigation("NotaAlunoMateriaConteudos");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.ProfessorEscola", b =>
                {
                    b.Navigation("NotasAlunosMateriasProfessores");

                    b.Navigation("TurmaMateriaProfessorEscolas");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Question.Pergunta", b =>
                {
                    b.Navigation("PerguntasQuestionarios");

                    b.Navigation("Respostas");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Question.Questionario", b =>
                {
                    b.Navigation("PerguntasQuestionarios");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Question.Resposta", b =>
                {
                    b.Navigation("PerguntasQuestionarios");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Turma", b =>
                {
                    b.Navigation("TurmaBimestres");

                    b.Navigation("TurmaMateriaProfessorEscolas");

                    b.Navigation("TurmasAlunosEscolas");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Util.Bimestre", b =>
                {
                    b.Navigation("TurmaBimestres");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.School.Util.Serie", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Seguranca.Site.Permissao", b =>
                {
                    b.Navigation("PermissoesContas");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.User.Conta", b =>
                {
                    b.Navigation("PermissoesContas");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.User.Usuario", b =>
                {
                    b.Navigation("Agendas");

                    b.Navigation("AlunosEscolas");

                    b.Navigation("Contas");

                    b.Navigation("EnderecoUsuarios");

                    b.Navigation("Logs");

                    b.Navigation("MovieListUsuarios");

                    b.Navigation("ProfessorEscolas");

                    b.Navigation("Questionarios");

                    b.Navigation("Respostas");

                    b.Navigation("VotoVideos");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Util.Arquivo", b =>
                {
                    b.Navigation("Apostilas");

                    b.Navigation("Livros");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Util.Endereco", b =>
                {
                    b.Navigation("EnderecoEscolas");

                    b.Navigation("EnderecoUsuarios");
                });

            modelBuilder.Entity("acme.estudoemvideo.domain.DTO.Util.Menu", b =>
                {
                    b.Navigation("PermissoesMenus");
                });
#pragma warning restore 612, 618
        }
    }
}
